{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u0420\\u043E\\u043C\\u0430\\\\WebstormProjects\\\\store\\\\client\\\\my-app\\\\src\\\\pages\\\\Payment.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useBasket } from '../context/BasketContext'; // Импортируем контекст корзины\nimport { SHOP_ROUTE } from '../utils/consts'; // Путь к странице магазина\nimport '../styles/PaymentPage.css'; // Подключаем стили\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PaymentPage = () => {\n  _s();\n  const {\n    clearBasket\n  } = useBasket(); // Получаем метод для очистки корзины\n  const [paymentStatus, setPaymentStatus] = useState(null); // Состояние для статуса платежа\n  const [paymentMessage, setPaymentMessage] = useState(\"\"); // Сообщение для отображения\n  const navigate = useNavigate();\n  const handlePayment = () => {\n    // Логика оформления платежа (например, через API)\n\n    // Предположим, что платеж прошел успешно\n    const isPaymentSuccessful = true; // Здесь будет ваша логика платежа\n\n    if (isPaymentSuccessful) {\n      setPaymentMessage('Платеж прошел успешно!');\n      setPaymentStatus('success');\n      clearBasket(); // Очищаем корзину после успешной оплаты\n      setTimeout(() => {\n        navigate(SHOP_ROUTE); // Перенаправляем в магазин через 2 секунды\n      }, 500);\n    } else {\n      setPaymentMessage('Ошибка при оплате');\n      setPaymentStatus('error');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"payment-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u041E\\u0444\\u043E\\u0440\\u043C\\u043B\\u0435\\u043D\\u0438\\u0435 \\u0437\\u0430\\u043A\\u0430\\u0437\\u0430\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), paymentStatus === 'success' && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"success-message\",\n      children: paymentMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }, this), paymentStatus === 'error' && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: paymentMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handlePayment,\n      className: \"payment-btn\",\n      children: \"\\u041E\\u043F\\u043B\\u0430\\u0442\\u0438\\u0442\\u044C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n_s(PaymentPage, \"fyPo3Gkrr7l1b39MKO4GtWq9fbg=\", false, function () {\n  return [useBasket, useNavigate];\n});\n_c = PaymentPage;\nexport default PaymentPage;\nvar _c;\n$RefreshReg$(_c, \"PaymentPage\");","map":{"version":3,"names":["React","useState","useNavigate","useBasket","SHOP_ROUTE","jsxDEV","_jsxDEV","PaymentPage","_s","clearBasket","paymentStatus","setPaymentStatus","paymentMessage","setPaymentMessage","navigate","handlePayment","isPaymentSuccessful","setTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Рома/WebstormProjects/store/client/my-app/src/pages/Payment.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useBasket } from '../context/BasketContext';  // Импортируем контекст корзины\r\nimport { SHOP_ROUTE } from '../utils/consts';  // Путь к странице магазина\r\nimport '../styles/PaymentPage.css';  // Подключаем стили\r\n\r\nconst PaymentPage = () => {\r\n    const { clearBasket } = useBasket();  // Получаем метод для очистки корзины\r\n    const [paymentStatus, setPaymentStatus] = useState(null);  // Состояние для статуса платежа\r\n    const [paymentMessage, setPaymentMessage] = useState(\"\");  // Сообщение для отображения\r\n    const navigate = useNavigate();\r\n\r\n    const handlePayment = () => {\r\n        // Логика оформления платежа (например, через API)\r\n\r\n        // Предположим, что платеж прошел успешно\r\n        const isPaymentSuccessful = true;  // Здесь будет ваша логика платежа\r\n\r\n        if (isPaymentSuccessful) {\r\n            setPaymentMessage('Платеж прошел успешно!');\r\n            setPaymentStatus('success');\r\n            clearBasket();  // Очищаем корзину после успешной оплаты\r\n            setTimeout(() => {\r\n                navigate(SHOP_ROUTE);  // Перенаправляем в магазин через 2 секунды\r\n            }, 500);\r\n        } else {\r\n            setPaymentMessage('Ошибка при оплате');\r\n            setPaymentStatus('error');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"payment-page\">\r\n            <h2>Оформление заказа</h2>\r\n\r\n            {/* Форматируем вывод сообщения о статусе оплаты */}\r\n            {paymentStatus === 'success' && (\r\n                <p className=\"success-message\">{paymentMessage}</p>\r\n            )}\r\n\r\n            {paymentStatus === 'error' && (\r\n                <p className=\"error-message\">{paymentMessage}</p>\r\n            )}\r\n\r\n            <button onClick={handlePayment} className=\"payment-btn\">\r\n                Оплатить\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PaymentPage;\r\n\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,SAAS,QAAQ,0BAA0B,CAAC,CAAE;AACvD,SAASC,UAAU,QAAQ,iBAAiB,CAAC,CAAE;AAC/C,OAAO,2BAA2B,CAAC,CAAE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAErC,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM;IAAEC;EAAY,CAAC,GAAGN,SAAS,CAAC,CAAC,CAAC,CAAE;EACtC,MAAM,CAACO,aAAa,EAAEC,gBAAgB,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAE;EAC3D,MAAM,CAACW,cAAc,EAAEC,iBAAiB,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAE;EAC3D,MAAMa,QAAQ,GAAGZ,WAAW,CAAC,CAAC;EAE9B,MAAMa,aAAa,GAAGA,CAAA,KAAM;IACxB;;IAEA;IACA,MAAMC,mBAAmB,GAAG,IAAI,CAAC,CAAE;;IAEnC,IAAIA,mBAAmB,EAAE;MACrBH,iBAAiB,CAAC,wBAAwB,CAAC;MAC3CF,gBAAgB,CAAC,SAAS,CAAC;MAC3BF,WAAW,CAAC,CAAC,CAAC,CAAE;MAChBQ,UAAU,CAAC,MAAM;QACbH,QAAQ,CAACV,UAAU,CAAC,CAAC,CAAE;MAC3B,CAAC,EAAE,GAAG,CAAC;IACX,CAAC,MAAM;MACHS,iBAAiB,CAAC,mBAAmB,CAAC;MACtCF,gBAAgB,CAAC,OAAO,CAAC;IAC7B;EACJ,CAAC;EAED,oBACIL,OAAA;IAAKY,SAAS,EAAC,cAAc;IAAAC,QAAA,gBACzBb,OAAA;MAAAa,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAGzBb,aAAa,KAAK,SAAS,iBACxBJ,OAAA;MAAGY,SAAS,EAAC,iBAAiB;MAAAC,QAAA,EAAEP;IAAc;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CACrD,EAEAb,aAAa,KAAK,OAAO,iBACtBJ,OAAA;MAAGY,SAAS,EAAC,eAAe;MAAAC,QAAA,EAAEP;IAAc;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CACnD,eAEDjB,OAAA;MAAQkB,OAAO,EAAET,aAAc;MAACG,SAAS,EAAC,aAAa;MAAAC,QAAA,EAAC;IAExD;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEd,CAAC;AAACf,EAAA,CA3CID,WAAW;EAAA,QACWJ,SAAS,EAGhBD,WAAW;AAAA;AAAAuB,EAAA,GAJ1BlB,WAAW;AA6CjB,eAAeA,WAAW;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
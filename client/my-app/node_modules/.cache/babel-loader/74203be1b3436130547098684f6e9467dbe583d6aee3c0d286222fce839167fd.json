{"ast":null,"code":"import { $authHost, $host } from \"./index\";\nimport { jwtDecode } from 'jwt-decode';\nexport const createType = async type => {\n  const {\n    data\n  } = await $host.post('api/type', type);\n  localStorage.setItem('token', data.token);\n  return data;\n};\nexport const fetchTypes = async type => {\n  const {\n    data\n  } = await $host.get('api/type');\n  localStorage.setItem('token', data.token);\n  return data;\n};\nexport const createBrand = async brand => {\n  const {\n    data\n  } = await $host.post('api/brand', brand);\n  localStorage.setItem('token', data.token);\n  return data;\n};\nexport const fetchBrands = async brand => {\n  const {\n    data\n  } = await $host.get('api/brand');\n  localStorage.setItem('token', data.token);\n  return data;\n};\nexport const createDevice = async device => {\n  const {\n    data\n  } = await $host.post('api/device', device);\n  localStorage.setItem('token', data.token);\n  return data;\n};\nexport const fetchDevices = async device => {\n  const {\n    data\n  } = await $host.get('api/device');\n  localStorage.setItem('token', data.token);\n  return data;\n};","map":{"version":3,"names":["$authHost","$host","jwtDecode","createType","type","data","post","localStorage","setItem","token","fetchTypes","get","createBrand","brand","fetchBrands","createDevice","device","fetchDevices"],"sources":["C:/Users/Рома/WebstormProjects/store/client/my-app/src/http/deviceAPI.js"],"sourcesContent":["import {$authHost, $host} from \"./index\";\r\nimport { jwtDecode } from 'jwt-decode';\r\n\r\nexport const createType = async (type) => {\r\n    const {data} = await $host.post('api/type', type)\r\n    localStorage.setItem('token', data.token)\r\n    return data\r\n}\r\n\r\nexport const fetchTypes = async (type) => {\r\n    const {data} = await $host.get('api/type')\r\n    localStorage.setItem('token', data.token)\r\n    return data\r\n}\r\n\r\n\r\nexport const createBrand = async (brand) => {\r\n    const {data} = await $host.post('api/brand', brand)\r\n    localStorage.setItem('token', data.token)\r\n    return data\r\n}\r\n\r\nexport const fetchBrands = async (brand) => {\r\n    const {data} = await $host.get('api/brand')\r\n    localStorage.setItem('token', data.token)\r\n    return data\r\n}\r\n\r\nexport const createDevice = async (device) => {\r\n    const {data} = await $host.post('api/device', device)\r\n    localStorage.setItem('token', data.token)\r\n    return data\r\n}\r\n\r\nexport const fetchDevices = async (device) => {\r\n    const {data} = await $host.get('api/device')\r\n    localStorage.setItem('token', data.token)\r\n    return data\r\n}"],"mappings":"AAAA,SAAQA,SAAS,EAAEC,KAAK,QAAO,SAAS;AACxC,SAASC,SAAS,QAAQ,YAAY;AAEtC,OAAO,MAAMC,UAAU,GAAG,MAAOC,IAAI,IAAK;EACtC,MAAM;IAACC;EAAI,CAAC,GAAG,MAAMJ,KAAK,CAACK,IAAI,CAAC,UAAU,EAAEF,IAAI,CAAC;EACjDG,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEH,IAAI,CAACI,KAAK,CAAC;EACzC,OAAOJ,IAAI;AACf,CAAC;AAED,OAAO,MAAMK,UAAU,GAAG,MAAON,IAAI,IAAK;EACtC,MAAM;IAACC;EAAI,CAAC,GAAG,MAAMJ,KAAK,CAACU,GAAG,CAAC,UAAU,CAAC;EAC1CJ,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEH,IAAI,CAACI,KAAK,CAAC;EACzC,OAAOJ,IAAI;AACf,CAAC;AAGD,OAAO,MAAMO,WAAW,GAAG,MAAOC,KAAK,IAAK;EACxC,MAAM;IAACR;EAAI,CAAC,GAAG,MAAMJ,KAAK,CAACK,IAAI,CAAC,WAAW,EAAEO,KAAK,CAAC;EACnDN,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEH,IAAI,CAACI,KAAK,CAAC;EACzC,OAAOJ,IAAI;AACf,CAAC;AAED,OAAO,MAAMS,WAAW,GAAG,MAAOD,KAAK,IAAK;EACxC,MAAM;IAACR;EAAI,CAAC,GAAG,MAAMJ,KAAK,CAACU,GAAG,CAAC,WAAW,CAAC;EAC3CJ,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEH,IAAI,CAACI,KAAK,CAAC;EACzC,OAAOJ,IAAI;AACf,CAAC;AAED,OAAO,MAAMU,YAAY,GAAG,MAAOC,MAAM,IAAK;EAC1C,MAAM;IAACX;EAAI,CAAC,GAAG,MAAMJ,KAAK,CAACK,IAAI,CAAC,YAAY,EAAEU,MAAM,CAAC;EACrDT,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEH,IAAI,CAACI,KAAK,CAAC;EACzC,OAAOJ,IAAI;AACf,CAAC;AAED,OAAO,MAAMY,YAAY,GAAG,MAAOD,MAAM,IAAK;EAC1C,MAAM;IAACX;EAAI,CAAC,GAAG,MAAMJ,KAAK,CAACU,GAAG,CAAC,YAAY,CAAC;EAC5CJ,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEH,IAAI,CAACI,KAAK,CAAC;EACzC,OAAOJ,IAAI;AACf,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
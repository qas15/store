{"ast":null,"code":"import axios from'axios';import{useNavigate}from'react-router-dom';const $host=axios.create({baseURL:process.env.REACT_APP_API_URL});const $authHost=axios.create({baseURL:process.env.REACT_APP_API_URL});const authInterceptor=config=>{const token=localStorage.getItem('token');if(token){config.headers.authorization=\"Bearer \".concat(token);}return config;};const errorInterceptor=error=>{if(error.response&&error.response.status===401){const currentPath=window.location.pathname;if(currentPath!=='/login'){window.location.href='/login';}}return Promise.reject(error);};$authHost.interceptors.request.use(authInterceptor);$authHost.interceptors.response.use(response=>response,errorInterceptor);export{$host,$authHost};","map":{"version":3,"names":["axios","useNavigate","$host","create","baseURL","process","env","REACT_APP_API_URL","$authHost","authInterceptor","config","token","localStorage","getItem","headers","authorization","concat","errorInterceptor","error","response","status","currentPath","window","location","pathname","href","Promise","reject","interceptors","request","use"],"sources":["/home/cracker1/Desktop/store/client/my-app/src/http/index.js"],"sourcesContent":["import axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst $host = axios.create({\r\n    baseURL: process.env.REACT_APP_API_URL,\r\n});\r\n\r\nconst $authHost = axios.create({\r\n    baseURL: process.env.REACT_APP_API_URL,\r\n});\r\n\r\nconst authInterceptor = config => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n        config.headers.authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n};\r\n\r\n\r\nconst errorInterceptor = (error) => {\r\n    if (error.response && error.response.status === 401) {\r\n\r\n        const currentPath = window.location.pathname;\r\n\r\n\r\n        if (currentPath !== '/login') {\r\n\r\n            window.location.href = '/login';\r\n        }\r\n    }\r\n    return Promise.reject(error);\r\n};\r\n\r\n$authHost.interceptors.request.use(authInterceptor);\r\n$authHost.interceptors.response.use(response => response, errorInterceptor);\r\n\r\nexport { $host, $authHost };\r\n\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,WAAW,KAAQ,kBAAkB,CAE9C,KAAM,CAAAC,KAAK,CAAGF,KAAK,CAACG,MAAM,CAAC,CACvBC,OAAO,CAAEC,OAAO,CAACC,GAAG,CAACC,iBACzB,CAAC,CAAC,CAEF,KAAM,CAAAC,SAAS,CAAGR,KAAK,CAACG,MAAM,CAAC,CAC3BC,OAAO,CAAEC,OAAO,CAACC,GAAG,CAACC,iBACzB,CAAC,CAAC,CAEF,KAAM,CAAAE,eAAe,CAAGC,MAAM,EAAI,CAC9B,KAAM,CAAAC,KAAK,CAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAC3C,GAAIF,KAAK,CAAE,CACPD,MAAM,CAACI,OAAO,CAACC,aAAa,WAAAC,MAAA,CAAaL,KAAK,CAAE,CACpD,CACA,MAAO,CAAAD,MAAM,CACjB,CAAC,CAGD,KAAM,CAAAO,gBAAgB,CAAIC,KAAK,EAAK,CAChC,GAAIA,KAAK,CAACC,QAAQ,EAAID,KAAK,CAACC,QAAQ,CAACC,MAAM,GAAK,GAAG,CAAE,CAEjD,KAAM,CAAAC,WAAW,CAAGC,MAAM,CAACC,QAAQ,CAACC,QAAQ,CAG5C,GAAIH,WAAW,GAAK,QAAQ,CAAE,CAE1BC,MAAM,CAACC,QAAQ,CAACE,IAAI,CAAG,QAAQ,CACnC,CACJ,CACA,MAAO,CAAAC,OAAO,CAACC,MAAM,CAACT,KAAK,CAAC,CAChC,CAAC,CAEDV,SAAS,CAACoB,YAAY,CAACC,OAAO,CAACC,GAAG,CAACrB,eAAe,CAAC,CACnDD,SAAS,CAACoB,YAAY,CAACT,QAAQ,CAACW,GAAG,CAACX,QAAQ,EAAIA,QAAQ,CAAEF,gBAAgB,CAAC,CAE3E,OAASf,KAAK,CAAEM,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}